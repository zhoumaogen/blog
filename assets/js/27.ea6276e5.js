(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{602:function(e,s,r){e.exports=r.p+"assets/img/app80-in-browser.08d44382.png"},693:function(e,s,r){"use strict";r.r(s);var t=r(16),a=Object(t.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_3-4-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-服务"}},[e._v("#")]),e._v(" 3.4 服务")]),e._v(" "),t("h2",{attrs:{id:"_1-先决条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-先决条件"}},[e._v("#")]),e._v(" 1. 先决条件")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.docker-cn.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 Docker 版本 1.13 或更高版本"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("获取 "),t("a",{attrs:{href:"https://docs.docker-cn.com/compose/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Compose"),t("OutboundLink")],1),e._v("。在 "),t("a",{attrs:{href:"https://docs.docker-cn.com/docker-for-mac/",target:"_blank",rel:"noopener noreferrer"}},[e._v("适用于 Mac 的 Docker"),t("OutboundLink")],1),e._v(" 及 "),t("a",{attrs:{href:"https://docs.docker-cn.com/docker-for-windows/",target:"_blank",rel:"noopener noreferrer"}},[e._v("适用于 Windows 的 Docker"),t("OutboundLink")],1),e._v(" 上，它已预先安装，因此您已准备就绪。在 Linux 系统上，您需要"),t("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[e._v("直接安装它"),t("OutboundLink")],1),e._v("。在 Windows 10 之前的系统上， "),t("em",[e._v("如果没有 Hyper-V")]),e._v("，请使用 "),t("a",{attrs:{href:"https://docs.docker-cn.com/toolbox/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Toolbox"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("阅读第一、二节的容器和镜像。")]),e._v(" "),t("li",[e._v("确保您已发布通过"),t("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/#share-your-image",target:"_blank",rel:"noopener noreferrer"}},[e._v("将其推送到镜像库"),t("OutboundLink")],1),e._v("创建的 "),t("code",[e._v("friendlyhello")]),e._v(" 镜像。我们将在此处使用该共享镜像。")]),e._v(" "),t("li",[e._v("确保您的镜像充当已部署的容器。运行以下命令，并填写 "),t("code",[e._v("username")]),e._v("、"),t("code",[e._v("repo")]),e._v(" 和 "),t("code",[e._v("tag")]),e._v(" 信息："),t("code",[e._v("docker run -p 80:80 username/repo:tag")]),e._v("，然后访问 "),t("code",[e._v("http://localhost/")]),e._v("。")])]),e._v(" "),t("h2",{attrs:{id:"_2-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-简介"}},[e._v("#")]),e._v(" 2. 简介")]),e._v(" "),t("p",[e._v("在第 3 部分中，我们将扩展应用并启用负载均衡。如需完成此操作，我们必须前往分布式应用的层次结构中的上一级别： "),t("strong",[e._v("服务")]),e._v("。")]),e._v(" "),t("ul",[t("li",[e._v("技术栈")]),e._v(" "),t("li",[t("strong",[e._v("服务")]),e._v("（您在此处）")]),e._v(" "),t("li",[e._v("容器（请参阅"),t("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 2 部分"),t("OutboundLink")],1),e._v("）")])]),e._v(" "),t("h2",{attrs:{id:"_3-了解服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解服务"}},[e._v("#")]),e._v(" 3. 了解服务")]),e._v(" "),t("p",[e._v("在分布式应用中，应用的不同部分称为“服务”。例如，假设有一个视频共享网站，它可能提供用于在数据库中存储应用程序数据的服务、用于在用户上传一些内容后在后台进行视频转码的服务、用于前端的服务等。")]),e._v(" "),t("p",[e._v("服务实际上是“生产中的容器”。一项服务仅运行一个镜像，但它会编制镜像的运行方式 - 它应使用的端口、容器的多少个从节点应运行才能使服务的容量满足其需求等。扩展服务将更改运行该软件的容器实例数，并将多个计算资源分配给进程中的服务。")]),e._v(" "),t("p",[e._v("幸运的是，很容易使用 Docker 平台定义、运行和扩展服务 – 只需编写一个 "),t("code",[e._v("docker-compose.yml")]),e._v(" 文件即可。")]),e._v(" "),t("h2",{attrs:{id:"_4-您的第一个-docker-compose-yml-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-您的第一个-docker-compose-yml-文件"}},[e._v("#")]),e._v(" 4. 您的第一个 "),t("code",[e._v("docker-compose.yml")]),e._v(" 文件")]),e._v(" "),t("p",[t("code",[e._v("docker-compose.yml")]),e._v(" 文件是一个 "),t("code",[e._v("YAML")]),e._v(" 文件，用于定义 Docker 容器在生产中的行为方式。")]),e._v(" "),t("h4",{attrs:{id:"docker-compose-yml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml"}},[e._v("#")]),e._v(" "),t("code",[e._v("docker-compose.yml")])]),e._v(" "),t("p",[e._v("需要时，将此文件另存为 "),t("code",[e._v("docker-compose.yml")]),e._v("。确保您已"),t("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/#share-your-image",target:"_blank",rel:"noopener noreferrer"}},[e._v("推送镜像"),t("OutboundLink")],1),e._v("（在"),t("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 2 部分"),t("OutboundLink")],1),e._v("中创建）至镜像库，并通过将"),t("code",[e._v("username/repo:tag")]),e._v(" 替换为镜像详细信息来更新此 "),t("code",[e._v(".yml")]),e._v("。")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('version:"3"\nservices:\n  web:\n    # 将 username/repo:tag 替换为您的名称和镜像详细信息\n    image: username/repository:tag\n    deploy:\n      replicas:5\n      resources:\n        limits:\n          cpus:"0.1"\n          memory:50M\n      restart_policy:\n        condition: on-failure\n    ports:\n      - "80:80"\n    networks:\n      - webnet\nnetworks:\n  webnet:\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br")])]),t("p",[e._v("此 "),t("code",[e._v("docker-compose.yml")]),e._v(" 文件会告诉 Docker 执行以下操作：")]),e._v(" "),t("ul",[t("li",[e._v("从镜像库中拉取"),t("a",{attrs:{href:"http://172.22.3.3/Hakugei/docker/blob/master/3-GetStart.md#%E5%8F%91%E5%B8%83%E9%95%9C%E5%83%8F",target:"_blank",rel:"noopener noreferrer"}},[e._v("我们在步骤 2 中上传的镜像"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("li",[e._v("将该镜像的五个实例作为服务 "),t("code",[e._v("web")]),e._v(" 运行，并将每个实例限制为最多使用 10% 的 CPU（在所有核心中）以及 50MB RAM。")]),e._v(" "),t("li",[e._v("如果某个容器发生故障，立即重启容器。")]),e._v(" "),t("li",[e._v("将主机上的端口 80 映射到 "),t("code",[e._v("web")]),e._v(" 的端口 80。")]),e._v(" "),t("li",[e._v("指示 "),t("code",[e._v("web")]),e._v(" 容器通过负载均衡的网络 "),t("code",[e._v("webnet")]),e._v(" 共享端口 80。（在内部，容器自身将在临时端口发布到 "),t("code",[e._v("web")]),e._v(" 的端口 80。）")]),e._v(" "),t("li",[e._v("使用默认设置定义 "),t("code",[e._v("webnet")]),e._v(" 网络（此为负载均衡的 overlay 网络）。")])]),e._v(" "),t("blockquote",[t("h4",{attrs:{id:"想了解关于-compose-文件版本、名称和命令的信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#想了解关于-compose-文件版本、名称和命令的信息"}},[e._v("#")]),e._v(" 想了解关于 Compose 文件版本、名称和命令的信息？")]),e._v(" "),t("p",[e._v("请注意，将 Compose 文件设置为 "),t("code",[e._v('version:"3"')]),e._v("。本质上，这会使其兼容 "),t("a",{attrs:{href:"https://docs.docker-cn.com/engine/swarm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("swarm mode"),t("OutboundLink")],1),e._v("。我们可以使用 "),t("a",{attrs:{href:"https://docs.docker-cn.com/compose/compose-file/#deploy",target:"_blank",rel:"noopener noreferrer"}},[e._v("deploy key"),t("OutboundLink")],1),e._v("（仅可用于 "),t("a",{attrs:{href:"https://docs.docker-cn.com/compose/compose-file/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Compose 文件格式版本 3.x"),t("OutboundLink")],1),e._v(" 及更高版本）及其子选项对每项服务（例如，"),t("code",[e._v("web")]),e._v("）进行负载均衡和优化性能。我们可以使用 "),t("code",[e._v("docker stack deploy")]),e._v(" 命令（仅在 Compose 文件版本 3.x 及更高版本上受支持）运行此文件。您可以使用 "),t("code",[e._v("docker-compose up")]),e._v(" 运行具有_非 swarm_ 配置的版本 3 文件，但由于我们将构建 swarm 示例，因此会专注于技术栈部署。")]),e._v(" "),t("p",[e._v("您可以将 Compose 文件命名为任何所需内容，以使其在逻辑上具有意义；"),t("code",[e._v("docker-compose.yml")]),e._v(" 仅为标准名称。我们可以简单地将此文件命名为 "),t("code",[e._v("docker-stack.yml")]),e._v(" 或更特定于项目的内容。")])]),e._v(" "),t("h2",{attrs:{id:"_5-运行新的负载均衡的应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-运行新的负载均衡的应用"}},[e._v("#")]),e._v(" 5. 运行新的负载均衡的应用")]),e._v(" "),t("p",[e._v("需要先运行以下命令，然后才能使用 "),t("code",[e._v("docker stack deploy")]),e._v(" 命令：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker swarm init\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v("：我们将在"),t("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part4/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 4 部分"),t("OutboundLink")],1),e._v("中了解该命令的含义。 如果未运行 "),t("code",[e._v("docker swarm init")]),e._v("，您将收到错误消息“此节点不是 swarm 管理节点”。")])]),e._v(" "),t("p",[e._v("现在，运行此命令。您必须为应用指定一个名称。在此处该名称设置为 "),t("code",[e._v("getstartedlab")]),e._v("：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker stack deploy -c docker-compose.yml getstartedlab\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("我们已经在一台主机上运行部署映像的5个容器实例。我们来看一下吧。")]),e._v(" "),t("p",[e._v("在我们的应用程序中获取一项服务的服务ID：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker service ls\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("请观察输出的"),t("code",[e._v("web")]),e._v("服务，并以您的应用名称为前缀。如果您将其命名为与此示例中显示的相同，则名称为 "),t("code",[e._v("getstartedlab_web")]),e._v("。还列出了服务ID，以及副本数，映像名称和公开端口。")]),e._v(" "),t("p",[e._v("或者，您可以运行"),t("code",[e._v("docker stack services")]),e._v("，然后运行技术栈的名称。以下示例命令允许您查看与"),t("code",[e._v("getstartedlab")]),e._v("技术栈关联的所有服务 ：")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack services getstartedlab\nID      NAME          MODE                REPLICAS            IMAGE               PORTS\nbqpve1djnk0x  getstartedlab_web  replicated    "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),e._v("/5   username/repo:tag  *:4000-"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("80")]),e._v("/tcp\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("在服务中运行的单个容器称为"),t("strong",[e._v("任务")]),e._v("。任务被赋予以数字递增的唯一ID，最多为您创建在"),t("code",[e._v("docker-compose.yml")]),e._v("中定义的数量的"),t("code",[e._v("副本")]),e._v("。使用下面的命令为您列出您的服务任务：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker service ps getstartedlab_web\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("如果您只列出系统上的所有容器，则任务也会显示，但不会被服务过滤：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker container ls -q\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("您可以"),t("code",[e._v("curl -4 http://localhost:4000")]),e._v("连续多次运行，或者在浏览器中转到该URL并点击刷新几次。")]),e._v(" "),t("p",[t("img",{attrs:{src:r(602),alt:"/images/app80-in-browser.png"}})]),e._v(" "),t("p",[e._v("无论哪种方式，容器ID都会发生变化，从而证明实现了负载均衡; 对于每个请求，以循环方式选择5个任务中的一个来响应。容器ID与上一个命令（"),t("code",[e._v("docker container ls -q")]),e._v("）的输出匹配。")]),e._v(" "),t("p",[e._v("要查看技术栈的所有任务，您可以运行"),t("code",[e._v("docker stack ps")]),e._v("您的应用程序名称，如以下示例所示：")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" getstartedlab\nID      NAME    IMAGE    NODE     DESIRED STATE   CURRENT STATE   ERROR       PORTS\nuwiaw67sc0eh        getstartedlab_web.1   username/repo:tag   docker-desktop      Running             Running "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(" minutes ago                       \nsk50xbhmcae7        getstartedlab_web.2   username/repo:tag   docker-desktop      Running             Running "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(" minutes ago                       \nc4uuw5i6h02j        getstartedlab_web.3   username/repo:tag   docker-desktop      Running             Running "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(" minutes ago                       \n0dyb70ixu25s        getstartedlab_web.4   username/repo:tag   docker-desktop      Running             Running "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(" minutes ago                       \naocrb88ap8b0        getstartedlab_web.5   username/repo:tag   docker-desktop      Running             Running "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("9")]),e._v(" minutes ago\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("blockquote",[t("h4",{attrs:{id:"运行windows-10"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行windows-10"}},[e._v("#")]),e._v(" 运行Windows 10？")]),e._v(" "),t("p",[e._v("Windows 10 PowerShell应该已经可以使用"),t("code",[e._v("curl")]),e._v("命令，但如果没有，你可以使用像"),t("a",{attrs:{href:"https://git-for-windows.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Git BASH"),t("OutboundLink")],1),e._v("这样的Linux终端模拟器 ，或者下载 "),t("a",{attrs:{href:"http://gnuwin32.sourceforge.net/packages/wget.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("与Windows"),t("OutboundLink")],1),e._v(" 非常相似的"),t("a",{attrs:{href:"http://gnuwin32.sourceforge.net/packages/wget.htm",target:"_blank",rel:"noopener noreferrer"}},[e._v("wget"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("blockquote",[t("p",[e._v("响应时间慢？")]),e._v(" "),t("p",[e._v("根据您环境的网络配置，容器最多可能需要30秒才能响应HTTP请求。这并不表示Docker或swarm性能，而是我们在本教程后面讨论的未满足的"),t("code",[e._v("Redis")]),e._v("依赖性。目前，访客柜台因同样的原因不起作用; 我们还没有添加服务来保存数据")])]),e._v(" "),t("h2",{attrs:{id:"_6-扩展应用程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-扩展应用程序"}},[e._v("#")]),e._v(" 6. 扩展应用程序")]),e._v(" "),t("p",[e._v("您可以通过更改"),t("code",[e._v("docker-compose.yml")]),e._v("中"),t("code",[e._v("replicas")]),e._v("的值，保存更改并重新运行"),t("code",[e._v("docker stack deploy")]),e._v("命令来扩展应用程序：")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker stack deploy -c docker-compose.yml getstartedlab\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("Docker 将执行原地更新，而无需先清除技术栈或终止任何容器。")]),e._v(" "),t("p",[e._v("现在，重新运行 "),t("code",[e._v("docker stack ps")]),e._v(" 命令以查看经过重新配置的已部署实例。例如，如果您扩展了从节点，将有更多处于运行状态的容器。")]),e._v(" "),t("h2",{attrs:{id:"_7-清除应用和-swarm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-清除应用和-swarm"}},[e._v("#")]),e._v(" 7. 清除应用和 swarm")]),e._v(" "),t("ul",[t("li",[e._v("使用 "),t("code",[e._v("docker stack rm")]),e._v(" 清除应用：")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker stack rm getstartedlab\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("ul",[t("li",[e._v("清除 swarm。")])]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker swarm leave --force\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("p",[e._v("这与使用 Docker 启动并扩展应用一样简单。您已朝向了解如何在生产中运行容器前进了一大步。下面您将了解如何在 Docker 机器集群上将此应用作为真正的 swarm 运行。")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v("：类似于此文件的 Compose 文件用于使用 Docker 定义应用程序，并且可以使用 "),t("a",{attrs:{href:"https://docs.docker-cn.com/docker-cloud/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 云"),t("OutboundLink")],1),e._v("上传到云提供商，或者可以使用 "),t("a",{attrs:{href:"https://www.docker.com/enterprise-edition",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker 企业版"),t("OutboundLink")],1),e._v("上传到您选择的任何硬件或云提供商。")])]),e._v(" "),t("p",[e._v("可以在此阶段探索的一些命令：")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 列出此 Docker 主机上所有正在运行的应用")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack deploy -c "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("composefile"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("appname"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 运行指定的 Compose 文件")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("service")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 列出与应用关联的服务")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("service")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("service"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 列出与应用关联的正在运行的容器")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" inspect "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("task or container"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 检查任务或容器")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" container "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -q                                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 列出容器的IDs")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("appname"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("                             "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 清除应用")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" swarm leave --force      "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 从管理器中清除单个节点群                   ")]),e._v("\n\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);