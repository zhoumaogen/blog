(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{603:function(e,s,a){e.exports=a.p+"assets/img/app-in-browser-swarm.66031f10.png"},604:function(e,s,a){e.exports=a.p+"assets/img/ingress-routing-mesh.4e757bf4.png"},694:function(e,s,a){"use strict";a.r(s);var r=a(16),n=Object(r.a)({},(function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"_3-5-集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-集群"}},[e._v("#")]),e._v(" 3.5 集群")]),e._v(" "),r("h2",{attrs:{id:"_1-先决条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-先决条件"}},[e._v("#")]),e._v(" 1. 先决条件")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://docs.docker-cn.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 Docker 版本 1.13 或更高版本"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("li",[e._v("按照"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part3/#prerequisites",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 3 部分：先决条件"),r("OutboundLink")],1),e._v("中所述，获取 "),r("a",{attrs:{href:"https://docs.docker-cn.com/compose/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Compose"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("li",[e._v("获取 "),r("a",{attrs:{href:"https://docs.docker-cn.com/machine/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Machine"),r("OutboundLink")],1),e._v("，它使用"),r("a",{attrs:{href:"https://docs.docker-cn.com/docker-for-mac/",target:"_blank",rel:"noopener noreferrer"}},[e._v("适用于 Mac 的 Docker"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://docs.docker-cn.com/docker-for-windows/",target:"_blank",rel:"noopener noreferrer"}},[e._v("适用于 Windows 的 Docker"),r("OutboundLink")],1),e._v(" 预先安装，但在 Linux 系统上，您需要"),r("a",{attrs:{href:"https://docs.docker-cn.com/machine/install-machine/#installing-machine-directly",target:"_blank",rel:"noopener noreferrer"}},[e._v("直接安装它"),r("OutboundLink")],1),e._v("。在 Windows 10 之前的系统上，"),r("em",[e._v("如果没有 Hyper-V")]),e._v("，请使用 "),r("a",{attrs:{href:"https://docs.docker-cn.com/toolbox/overview/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Toolbox"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("li",[e._v("阅读第一、二节的容器和镜像。")]),e._v(" "),r("li",[e._v("确保您已发布通过"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/#share-your-image",target:"_blank",rel:"noopener noreferrer"}},[e._v("将其推送到镜像库"),r("OutboundLink")],1),e._v("创建的 "),r("code",[e._v("friendlyhello")]),e._v(" 镜像。我们将在此处使用该共享镜像。")]),e._v(" "),r("li",[e._v("确保您的镜像充当已部署的容器。运行以下命令，并填写 "),r("code",[e._v("username")]),e._v("、"),r("code",[e._v("repo")]),e._v(" 和 "),r("code",[e._v("tag")]),e._v(" 信息："),r("code",[e._v("docker run -p 80:80 username/repo:tag")]),e._v("，然后访问 "),r("code",[e._v("http://localhost/")]),e._v("。")]),e._v(" "),r("li",[e._v("就近从"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 3 部分"),r("OutboundLink")],1),e._v("获取 "),r("code",[e._v("docker-compose.yml")]),e._v(" 的副本。")])]),e._v(" "),r("h2",{attrs:{id:"_2-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-简介"}},[e._v("#")]),e._v(" 2. 简介")]),e._v(" "),r("p",[e._v("在"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 3 部分"),r("OutboundLink")],1),e._v("中，您使用了在"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part2/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 2 部分"),r("OutboundLink")],1),e._v("中编写的应用，并通过将其转换为服务以及在进程中将其最多扩展 5 倍来定义了它应如何在生产中运行。")]),e._v(" "),r("p",[e._v("在第 4 部分中，您可以在此处将此应用部署到集群，并在多台机器上运行它。可以通过将多台机器加入"),r("code",[e._v("Dockerized")]),e._v("集群 "),r("strong",[e._v("swarm")]),e._v("来实现多容器、多机器应用。")]),e._v(" "),r("h2",{attrs:{id:"_3-了解-swarm-集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-了解-swarm-集群"}},[e._v("#")]),e._v(" 3. 了解 swarm 集群")]),e._v(" "),r("p",[e._v("swarm 是一组运行 Docker 并且已加入集群中的机器。执行此操作后，您可以继续运行已使用的 Docker 命令，但现在它们在集群上由 "),r("strong",[e._v("swarm 管理节点")]),e._v("执行。 swarm 中的机器可以为物理或虚拟机。加入 swarm 后，可以将它们称为"),r("strong",[e._v("节点")]),e._v("。")]),e._v(" "),r("p",[e._v("swarm 管理节点可以使用多项策略来运行容器，例如“最空的节点”– 这将使用容器填充使用最少的机器。或“全局”，这将确保每台机器恰好获得指定容器的一个实例。您可以指示 swarm 管理节点使用 Compose 文件中的这些策略，就像您已使用的策略一样。")]),e._v(" "),r("p",[e._v("swarm 管理节点是 swarm 中可以执行命令或授权其他机器加入 swarm 作为"),r("strong",[e._v("工作节点")]),e._v("的唯一机器。工作节点仅用于提供功能，并且无权告知任何其他机器它可以做什么和不能做什么。")]),e._v(" "),r("p",[e._v("到目前为止，您已在本地机器上以单主机模式使用 Docker。但是，也可以将 Docker 切换到 "),r("strong",[e._v("swarm mode")]),e._v("，并且这可以实现 swarm 的使用。即时启用 swarm mode 可以使当前机器成为 swarm 管理节点。从那时起，Docker 将在您要管理的 swarm 上运行您执行的命令，而不是仅在当前机器上执行命令。")]),e._v(" "),r("h3",{attrs:{id:"_3-1-创建一个集群"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建一个集群"}},[e._v("#")]),e._v(" 3.1. 创建一个集群")]),e._v(" "),r("p",[e._v("swarm 由多个节点组成，这些节点可以是物理或虚拟机。基本概念非常简单：运行 "),r("code",[e._v("docker swarm init")]),e._v(" 以启用 swarm mode 并使当前机器成为 swarm 管理节点，然后在其他机器上运行 "),r("code",[e._v("docker swarm join")]),e._v("，使它们以工作节点形式加入 swarm。选择下面的选项卡以查看如何在各种上下文中执行此操作。我们将使用 VM 来快速创建包含两台机器的集群并将其转换为 swarm。")]),e._v(" "),r("h4",{attrs:{id:"_3-1-1-本地-vm-mac、linux、windows-7-和-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-本地-vm-mac、linux、windows-7-和-8"}},[e._v("#")]),e._v(" 3.1.1. 本地 "),r("code",[e._v("VM")]),e._v("（Mac、Linux、Windows 7 和 8）")]),e._v(" "),r("p",[e._v("首先，您将需要可以创建 VM 的管理程序，因此针对机器的操作系统"),r("a",{attrs:{href:"https://www.virtualbox.org/wiki/Downloads",target:"_blank",rel:"noopener noreferrer"}},[e._v("安装 VirtualBox"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：如果您在已安装 Hyper-V 的 Windows 系统中， Windows 10 无需安装 VirtualBox 并且您应该改为使用 Hyper-V 。通过单击上述 Hyper-V 选项卡，查看用于 Hyper-V 系统系统的说明。")])]),e._v(" "),r("p",[e._v("现在，使用 "),r("code",[e._v("docker-machine")]),e._v(" 和 VirtualBox 驱动来创建一对 VM：")]),e._v(" "),r("div",{staticClass:"language-none line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker-machine create --driver virtualbox myvm1\n$ docker-machine create --driver virtualbox myvm2\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("h4",{attrs:{id:"_3-1-2-列出虚拟机并获取其ip地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-列出虚拟机并获取其ip地址"}},[e._v("#")]),e._v(" 3.1.2. 列出虚拟机并获取其"),r("code",[e._v("IP")]),e._v("地址")]),e._v(" "),r("p",[e._v("现在，您已创建两个"),r("code",[e._v("VM")]),e._v("，分别名为 "),r("code",[e._v("myvm1")]),e._v(" 和 "),r("code",[e._v("myvm2")]),e._v("（如 "),r("code",[e._v("docker-machine ls")]),e._v(" 所示）。")]),e._v(" "),r("p",[e._v("使用此命令列出计算机并获取其IP地址。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：您需要以管理员身份运行以下命令，否则您将无法获得任何合理的输出（仅“未知”）。")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker-machine ls\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("p",[e._v("以下是此命令的示例输出。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker-machine ls\nNAME    ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS\nmyvm1   -        virtualbox   Running   tcp://192.168.99.100:2376           v17.06.2-ce\nmyvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.06.2-ce\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("h4",{attrs:{id:"_3-1-3-初始化swarm并添加节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-初始化swarm并添加节点"}},[e._v("#")]),e._v(" 3.1.3. 初始化SWARM并添加节点")]),e._v(" "),r("p",[e._v("第一个 "),r("code",[e._v("VM")]),e._v("将用作管理节点，用于执行 "),r("code",[e._v("docker")]),e._v(" 命令并对加入 swarm 的工作节点进行身份验证，而第二个 "),r("code",[e._v("VM")]),e._v(" 将为工作节点。")]),e._v(" "),r("p",[e._v("您可以使用 "),r("code",[e._v("docker-machine ssh")]),e._v(" 向 VM 发送命令。使用 "),r("code",[e._v("docker swarm init")]),e._v(" 指示 "),r("code",[e._v("myvm1")]),e._v(" 成为 swarm 管理节点，并且您将看到类似于以下内容的输出：")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker swarm init"')]),e._v("\nSwarm initialized: current "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("node ID"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" is now a manager.\n\nTo "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" a worker to this swarm, run the following command:\n\n  "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" swarm "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("join")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --token "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("token"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("ip"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(":"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("port"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n  To "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" a manager to this swarm, run "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v("'docker swarm join-token manager'")]),e._v(" and follow the instructions.\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br")])]),r("blockquote",[r("h4",{attrs:{id:"端口2377和2376"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#端口2377和2376"}},[e._v("#")]),e._v(" 端口2377和2376")]),e._v(" "),r("p",[r("code",[e._v("docker swarm init")]),e._v("和"),r("code",[e._v("docker swarm join")]),e._v("始终运行使用端口2377（群集管理端口），或着根本没有指定端口，并使其采用默认值。")]),e._v(" "),r("p",[r("code",[e._v("docker-machine ls")]),e._v("包含端口2376 返回的计算机"),r("code",[e._v("IP")]),e._v("地址，即Docker守护程序端口。请勿使用此端口，否则 "),r("a",{attrs:{href:"https://forums.docker.com/t/docker-swarm-join-with-virtualbox-connection-error-13-bad-certificate/31392/2",target:"_blank",rel:"noopener noreferrer"}},[e._v("您可能会遇到错误"),r("OutboundLink")],1),e._v("。")])]),e._v(" "),r("blockquote",[r("p",[e._v("使用SSH时遇到问题？试试--native-ssh标志")]),e._v(" "),r("p",[e._v("Docker Machine "),r("a",{attrs:{href:"https://docs.docker.com/machine/reference/ssh/#different-types-of-ssh",target:"_blank",rel:"noopener noreferrer"}},[e._v("可以让您使用自己系统的SSH"),r("OutboundLink")],1),e._v("，如果由于某种原因您无法向Swarm管理器发送命令。只需"),r("code",[e._v("--native-ssh")]),e._v("在调用"),r("code",[e._v("ssh")]),e._v("命令时指定 标志：")])]),e._v(" "),r("p",[r("code",[e._v("docker-machine --native-ssh ssh myvm1 ...")])]),e._v(" "),r("p",[e._v("如您所见，对 "),r("code",[e._v("docker swarm init")]),e._v(" 的响应包含预先配置的 "),r("code",[e._v("docker swarm join")]),e._v(" 命令，以便您在任何要添加的节点上运行。复制此命令，然后通过 "),r("code",[e._v("docker-machine ssh")]),e._v(" 将其发送给 "),r("code",[e._v("myvm2")]),e._v("，从而让 "),r("code",[e._v("myvm2")]),e._v(" 加入您的新 swarm 作为工作节点。")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm2 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker swarm join --token <token> <ip>:<port>"')]),e._v("\nThis "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" joined a swarm as a worker.\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("h4",{attrs:{id:"祝贺您-已成功创建您的第一个-swarm。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#祝贺您-已成功创建您的第一个-swarm。"}},[e._v("#")]),e._v(" 祝贺您，已成功创建您的第一个 swarm。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：您还可以在没有附加任何命令的情况运行 "),r("code",[e._v("docker-machine ssh myvm2")]),e._v("，以便在该 VM 上打开终端会话。在您已准备好返回到主机 shell 提示符时，请输入 "),r("code",[e._v("exit")]),e._v("。可能更容易通过这种方式粘贴 join 命令。")])]),e._v(" "),r("p",[e._v("使用 "),r("code",[e._v("ssh")]),e._v(" 连接到 ("),r("code",[e._v("docker-machine ssh myvm1")]),e._v(")，并运行 "),r("code",[e._v("docker node ls")]),e._v(" 以查看此 swarm 中的节点：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker@myvm1:~$ docker node ls\nID         HOSTNAME           STATUS         AVAILABILITY       MANAGER   STATUS\nbrtu9urxwfd5j0zrmkubhpkbd     myvm2            Ready            Active              \nrihwohkh3ph38fhillhhb84sk *   myvm1            Ready            Active    Leader\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("blockquote",[r("h4",{attrs:{id:"离开swarm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#离开swarm"}},[e._v("#")]),e._v(" 离开"),r("strong",[e._v("swarm")])]),e._v(" "),r("p",[e._v("如果要重新开始，可以运行"),r("code",[e._v("docker swarm leave")]),e._v("命令令每个节点重新运行。")])]),e._v(" "),r("h4",{attrs:{id:"_3-2-1-本地-vm-windows-10-hyper-v"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-本地-vm-windows-10-hyper-v"}},[e._v("#")]),e._v(" 3.2.1.  本地 "),r("code",[e._v("VM")]),e._v(" (Windows 10/Hyper-V)")]),e._v(" "),r("p",[e._v("首先，快速为您要共享的 VM 创建虚拟交换机，因此它们将能够彼此相互连接。")]),e._v(" "),r("ol",[r("li",[e._v("启动 Hyper-V 管理节点")]),e._v(" "),r("li",[e._v("单击右侧菜单中的"),r("strong",[e._v("虚拟交换机管理节点")])]),e._v(" "),r("li",[e._v("单击类型为"),r("strong",[e._v("外部")]),e._v("的"),r("strong",[e._v("创建虚拟交换机")])]),e._v(" "),r("li",[e._v("为其指定名称 "),r("code",[e._v("myswitch")]),e._v("，然后选中此框以共享主机的活动网络适配器")])]),e._v(" "),r("p",[e._v("现在，使用节点管理工具 "),r("code",[e._v("docker-machine")]),e._v(" 创建一对虚拟机：")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：您需要以管理员身份运行以下命令，否则您无权创建"),r("code",[e._v("hyperv VM")]),e._v("！")])]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine create -d hyperv --hyperv-virtual-switch "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myswitch"')]),e._v(" myvm1\n$ docker-machine create -d hyperv --hyperv-virtual-switch "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myswitch"')]),e._v(" myvm2\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("h4",{attrs:{id:"_3-2-2-列出虚拟机并获取其ip地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-列出虚拟机并获取其ip地址"}},[e._v("#")]),e._v(" 3.2.2. 列出虚拟机并获取其IP地址")]),e._v(" "),r("p",[e._v("您现在创建了两个名为"),r("code",[e._v("myvm1")]),e._v("和的VM "),r("code",[e._v("myvm2")]),e._v("。")]),e._v(" "),r("p",[e._v("使用此命令列出计算机并获取其IP地址。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：您需要以管理员身份运行以下命令，否则您将无法获得任何合理的输出（仅“未知”）。")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker-machine ls\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("以下是此命令的示例输出。")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("\nNAME   ACTIVE  DRIVER       STATE     URL     SWARM         DOCKER               ERRORS\nmyvm1   -     virtualbox  Running  tcp://192.168.99.100:2376   "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("17.06")]),e._v(".2-ce\nmyvm2   -     virtualbox  Running  tcp://192.168.99.101:2376   v17.06.2-c\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h4",{attrs:{id:"_3-2-3-初始化swarm并添加节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-初始化swarm并添加节点"}},[e._v("#")]),e._v(" 3.2.3. 初始化SWARM并添加节点")]),e._v(" "),r("p",[e._v("现在，您已创建两个 "),r("code",[e._v("VM")]),e._v("，分别名为 "),r("code",[e._v("myvm1")]),e._v(" 和 "),r("code",[e._v("myvm2")]),e._v("（如 "),r("code",[e._v("docker-machine ls")]),e._v(" 所示）。第一个 "),r("code",[e._v("VM")]),e._v(" 将用作管理节点，用于执行 "),r("code",[e._v("docker")]),e._v(" 命令并对加入 swarm 的工作节点进行身份验证，而第二个"),r("code",[e._v("VM")]),e._v("将为工作节点。")]),e._v(" "),r("p",[e._v("您可以使用 "),r("code",[e._v("docker-machine ssh")]),e._v(" 向 VM 发送命令。使用 "),r("code",[e._v("docker swarm init")]),e._v(" 指示 "),r("code",[e._v("myvm1")]),e._v(" 成为 swarm 管理节点，并且您将看到类似于以下内容的输出：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker-machine ssh myvm1 \"docker swarm init\"\nSwarm initialized: current node <node ID> is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n  docker swarm join --token <token> <ip>:<port>\n  To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br")])]),r("blockquote",[r("h4",{attrs:{id:"收到关于需要使用-advertise-addr-的错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#收到关于需要使用-advertise-addr-的错误"}},[e._v("#")]),e._v(" 收到关于需要使用 "),r("code",[e._v("--advertise-addr")]),e._v(" 的错误？")]),e._v(" "),r("p",[e._v("通过运行 "),r("code",[e._v("docker-machine ls")]),e._v(" 来复制 "),r("code",[e._v("myvm1")]),e._v(" 的 IP 地址，然后使用 该 IP 地址并通过 "),r("code",[e._v("--advertise-addr")]),e._v(" 指定端口 "),r("code",[e._v("2377")]),e._v("（用于 swarm join 的端口）， 以便再次运行 "),r("code",[e._v("docker swarm init")]),e._v(" 命令。例如：")]),e._v(" "),r("p",[e._v('docker-machine ssh myvm1 "docker swarm init --advertise-addr 192.168.99.100:2377"')])]),e._v(" "),r("p",[e._v("如您所见，对 "),r("code",[e._v("docker swarm init")]),e._v(" 的响应包含预先配置的 "),r("code",[e._v("docker swarm join")]),e._v(" 命令，以便您在任何要添加的节点上运行。复制此命令，然后通过 "),r("code",[e._v("docker-machine ssh")]),e._v(" 将其发送给 "),r("code",[e._v("myvm2")]),e._v("，从而让 "),r("code",[e._v("myvm2")]),e._v(" 加入您的新 swarm 作为工作节点。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('$ docker-machine ssh myvm2 "docker swarm join \\\n--token <token> \\\n<ip>:<port>"\n\nThis node joined a swarm as a worker.\n\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br")])]),r("p",[e._v("祝贺您，已成功创建您的第一个 swarm。")]),e._v(" "),r("blockquote",[r("p",[r("strong",[e._v("注意")]),e._v("：您还可以在没有附加任何命令的情况运行 "),r("code",[e._v("docker-machine ssh myvm2")]),e._v("，以便在该 VM 上打开终端会话。在您已准备好返回到主机 shell 提示符时，请输入 "),r("code",[e._v("exit")]),e._v("。可能更容易通过这种方式粘贴 join 命令。")])]),e._v(" "),r("p",[e._v("使用 "),r("code",[e._v("ssh")]),e._v(" 连接到 ("),r("code",[e._v("docker-machine ssh myvm1")]),e._v(")，并运行 "),r("code",[e._v("docker node ls")]),e._v(" 以查看此 swarm 中的节点：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker@myvm1:~$ docker node ls\nID         HOSTNAME           STATUS         AVAILABILITY       MANAGER   STATUS\nbrtu9urxwfd5j0zrmkubhpkbd     myvm2            Ready            Active              \nrihwohkh3ph38fhillhhb84sk *   myvm1            Ready            Active    Leader\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("blockquote",[r("h4",{attrs:{id:"离开swarm-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#离开swarm-2"}},[e._v("#")]),e._v(" 离开"),r("strong",[e._v("swarm")])]),e._v(" "),r("p",[e._v("如果要重新开始，可以运行"),r("code",[e._v("docker swarm leave")]),e._v("命令令每个节点重新运行。")])]),e._v(" "),r("h2",{attrs:{id:"_4-在集群上部署应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-在集群上部署应用"}},[e._v("#")]),e._v(" 4. 在集群上部署应用")]),e._v(" "),r("p",[e._v("困难的部分已完成。现在，您只需重复在"),r("a",{attrs:{href:"https://docs.docker-cn.com/get-started/part3/",target:"_blank",rel:"noopener noreferrer"}},[e._v("第 3 部分"),r("OutboundLink")],1),e._v("中使用的进程，以便在新 swarm 中进行部署。只需记住，只有 "),r("code",[e._v("myvm1")]),e._v(" 之类的 swarm 管理节点执行 Docker 命令；工作节点仅适用于容量。")]),e._v(" "),r("h3",{attrs:{id:"_4-1-docker-machine为swarm管理器配置shell"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-docker-machine为swarm管理器配置shell"}},[e._v("#")]),e._v(" 4.1. "),r("code",[e._v("docker-machine")]),e._v("为swarm管理器配置shell")]),e._v(" "),r("p",[e._v("到目前为止，您已经将Docker命令包装在"),r("code",[e._v("docker-machine ssh")]),e._v("与VM通信中。另一种选择是运行"),r("code",[e._v("docker-machine env <machine>")]),e._v("以获取并运行一个命令，该命令将当前shell配置为与VM上的Docker守护程序通信。此方法适用于下一步，因为它允许您使用本地"),r("code",[e._v("docker-compose.yml")]),e._v("文件“远程”部署应用程序，而无需将其复制到任何位置。")]),e._v(" "),r("p",[e._v("输入"),r("code",[e._v("docker-machine env myvm1")]),e._v("，命令，然后复制粘贴并运行作为输出的最后一行提供的命令，以配置要与之通信的shell（"),r("code",[e._v("myvm1")]),e._v("swarm管理器）。")]),e._v(" "),r("p",[e._v("配置shell的命令在Mac，Linux与Windows有些不同，因此每个示例都显示在下面的选项卡上")]),e._v(" "),r("h4",{attrs:{id:"mac或linux上的docker机器shell环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mac或linux上的docker机器shell环境"}},[e._v("#")]),e._v(" MAC或LINUX上的DOCKER机器SHELL环境")]),e._v(" "),r("p",[e._v("运行"),r("code",[e._v("docker-machine env myvm1")]),e._v("以获取命令以配置要与之通信的shell "),r("code",[e._v("myvm1")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('$ docker-machine env myvm1\nexport DOCKER_TLS_VERIFY="1"\nexport DOCKER_HOST="tcp://192.168.99.100:2376"\nexport DOCKER_CERT_PATH="/Users/sam/.docker/machine/machines/myvm1"\nexport DOCKER_MACHINE_NAME="myvm1"\n# Run this command to configure your shell:\n# eval $(docker-machine env myvm1)\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br")])]),r("p",[e._v("运行给定命令以配置要与之通信的shell "),r("code",[e._v("myvm1")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("eval $(docker-machine env myvm1)\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("运行"),r("code",[e._v("docker-machine ls")]),e._v("以验证它"),r("code",[e._v("myvm1")]),e._v("现在是活动计算机，如旁边的星号所示。")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("\nNAME    ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER        ERRORS\nmyvm1   *        virtualbox   Running   tcp://192.168.99.100:2376           v17.06.2-ce\nmyvm2   -        virtualbox   Running   tcp://192.168.99.101:2376           v17.06.2-ce\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h4",{attrs:{id:"windows上的docker机器shell环境"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#windows上的docker机器shell环境"}},[e._v("#")]),e._v(" WINDOWS上的DOCKER机器SHELL环境")]),e._v(" "),r("p",[e._v("运行"),r("code",[e._v("docker-machine env myvm1")]),e._v("以获取命令以配置要与之通信的shell "),r("code",[e._v("myvm1")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('PS C:\\Users\\sam\\sandbox\\get-started> docker-machine env myvm1\n$Env:DOCKER_TLS_VERIFY = "1"\n$Env:DOCKER_HOST = "tcp://192.168.203.207:2376"\n$Env:DOCKER_CERT_PATH = "C:\\Users\\sam\\.docker\\machine\\machines\\myvm1"\n$Env:DOCKER_MACHINE_NAME = "myvm1"\n$Env:COMPOSE_CONVERT_WINDOWS_PATHS = "true"\n# Run this command to configure your shell:\n# & "C:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker-machine.exe" env myvm1 | Invoke-Expression\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br")])]),r("p",[e._v("运行给定命令以配置要与之通信的shell "),r("code",[e._v("myvm1")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('& "C:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker-machine.exe" env myvm1 | Invoke-Expression\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("运行"),r("code",[e._v("docker-machine ls")]),e._v("以验证它"),r("code",[e._v("myvm1")]),e._v("是旁边的星号所指示的活动计算机。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("PS C:PATH> docker-machine ls\nNAME    ACTIVE   DRIVER   STATE     URL                          SWARM   DOCKER        ERRORS\nmyvm1   *        hyperv   Running   tcp://192.168.203.207:2376           v17.06.2-ce\nmyvm2   -        hyperv   Running   tcp://192.168.200.181:2376           v17.06.2-ce\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br")])]),r("h2",{attrs:{id:"_5-在swarm管理器上部署应用程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-在swarm管理器上部署应用程序"}},[e._v("#")]),e._v(" 5. 在swarm管理器上部署应用程序")]),e._v(" "),r("p",[e._v("现在你拥有了"),r("code",[e._v("myvm1")]),e._v("，您可以使用其作为群组管理器的功能，通过使用"),r("code",[e._v("docker stack deploy")]),e._v("您在第3部分中使用的相同命令"),r("code",[e._v("myvm1")]),e._v("和您的本地副本来部署您的应用程序"),r("code",[e._v("docker-compose.yml.")]),e._v("。此命令可能需要几秒钟才能完成，部署需要一些时间才能完成。使用"),r("code",[e._v("docker service ps <service_name>")]),e._v("swarm管理器上的 命令验证是否已重新部署所有服务。")]),e._v(" "),r("p",[e._v("您的"),r("code",[e._v("myvm1")]),e._v("通过"),r("code",[e._v("docker-machine")]),e._v("shell配置进行连接，您仍然可以访问本地主机上的文件。确保您与以前位于同一目录中，其中包括"),r("code",[e._v("docker-compose.yml")]),e._v("您在第3部分中创建的 "),r("a",{attrs:{href:"http://172.22.3.3/Hakugei/docker/blob/master/3-GetStart.md#4%E6%82%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA-docker-composeyml-%E6%96%87%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"}},[e._v("文件"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("p",[e._v("与以前一样，运行以下命令以部署应用程序"),r("code",[e._v("myvm1")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker stack deploy -c docker-compose.yml getstartedlab\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("p",[e._v("就是这样，应用程序部署在一个群集集群中！")]),e._v(" "),r("p",[r("strong",[e._v("注意")]),e._v("：如果您的映像存储在私有仓库而不是Docker Hub上，则需要使用登录"),r("code",[e._v("docker login <your-registry>")]),e._v("，然后需要将"),r("code",[e._v("--with-registry-auth")]),e._v("标志添加到上述命令中。例如：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker login registry.example.com\n\ndocker stack deploy --with-registry-auth -c docker-compose.yml getstartedlab\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("p",[e._v("这会使用加密的"),r("code",[e._v("WAL")]),e._v("日志将登录令牌从本地客户端传递到部署服务的swarm节点。有了这些信息，节点就可以登录仓库并提取镜像。")]),e._v(" "),r("p",[e._v("现在，您可以使用第"),r("a",{attrs:{href:"https://docs.docker.com/get-started/part3/#run-your-new-load-balanced-app",target:"_blank",rel:"noopener noreferrer"}},[e._v("3部分中"),r("OutboundLink")],1),e._v("使用的相同"),r("a",{attrs:{href:"https://docs.docker.com/get-started/part3/#run-your-new-load-balanced-app",target:"_blank",rel:"noopener noreferrer"}},[e._v("docker命令"),r("OutboundLink")],1),e._v("。并且它们全部将按您的预期工作。只有这一次，您会看到容器已分布在 "),r("code",[e._v("myvm1")]),e._v(" 和 "),r("code",[e._v("myvm2")]),e._v(" 之间。")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker stack ps getstartedlab"')]),e._v("\n\nID            NAME        IMAGE              NODE   DESIRED STATE\njq2g3qp8nzwx  test_web.1  username/repo:tag  myvm1  Running\n88wgshobzoxl  test_web.2  username/repo:tag  myvm2  Running\nvbb1qbkb0o2z  test_web.3  username/repo:tag  myvm2  Running\nghii74p9budx  test_web.4  username/repo:tag  myvm1  Running\n0prmarhavs87  test_web.5  username/repo:tag  myvm2  Running\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br")])]),r("p",[e._v("您可以从 "),r("code",[e._v("myvm1")]),e._v(" "),r("strong",[e._v("或")]),e._v(" "),r("code",[e._v("myvm2")]),e._v(" 的 "),r("code",[e._v("IP")]),e._v(" 地址访问应用。您创建的网络将在它们之间共享并实现了负载均衡。运行"),r("code",[e._v("docker-machine ls")]),e._v(" 以获取"),r("code",[e._v("VM")]),e._v("的"),r("code",[e._v("IP")]),e._v(" 地址，并在浏览器上访问其中一个地址，并按“刷新”（或者仅对它们执行 "),r("code",[e._v("curl")]),e._v("）。您将看到五个可能的容器 ID 全部随机循环，表示负载均衡。")]),e._v(" "),r("p",[r("img",{attrs:{src:a(603),alt:"/images/app-in-browser-swarm.png"}})]),e._v(" "),r("p",[e._v("这两个 "),r("code",[e._v("IP")]),e._v(" 地址都适用的原因在于，swarm 中的节点将参加入口"),r("strong",[e._v("网格路由")]),e._v("。这可以确保 swarm 中特定端口上部署的服务始终将该端口保留给它自己，而与实际运行容器的是什么节点无关。下面显示了在三节点 swarm 上的端口 "),r("code",[e._v("8080")]),e._v(" 发布的服务 "),r("code",[e._v("my-web")]),e._v(" 的网格路由的图：")]),e._v(" "),r("p",[r("img",{attrs:{src:a(604),alt:"/images/ingress-routing-mesh.png"}})]),e._v(" "),r("blockquote",[r("h4",{attrs:{id:"遇到连接问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#遇到连接问题"}},[e._v("#")]),e._v(" 遇到连接问题？")]),e._v(" "),r("p",[e._v("请记住，为了使用 swarm 中的入口网络， 您需要在 swarm 节点之间开放以下端口， 然后再启用 swarm mode：")]),e._v(" "),r("ul",[r("li",[e._v("端口 7946 TCP/UDP，用于容器网络发现。")]),e._v(" "),r("li",[e._v("端口 4789 "),r("code",[e._v("UDP")]),e._v("，用于容器入口网络。")])])]),e._v(" "),r("h2",{attrs:{id:"_6-迭代和扩展应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-迭代和扩展应用"}},[e._v("#")]),e._v(" 6. 迭代和扩展应用")]),e._v(" "),r("p",[e._v("您可以在此处执行在“第 3 部分”中学习的所有内容。")]),e._v(" "),r("p",[e._v("通过更改 "),r("code",[e._v("docker-compose.yml")]),e._v(" 文件扩展应用。")]),e._v(" "),r("p",[e._v("通过编辑代码更改应用行为。")]),e._v(" "),r("p",[e._v("无论哪种情况，只需再次运行 "),r("code",[e._v("docker stack deploy")]),e._v(" 即可部署这些更改。")]),e._v(" "),r("p",[e._v("通过使用对 "),r("code",[e._v("myvm2")]),e._v(" 使用的 "),r("code",[e._v("docker swarm join")]),e._v(" 命令，您可以将任何机器（物理或虚拟）加入此 swarm，并且容量将添加到集群中。然后，运行 "),r("code",[e._v("docker stack deploy")]),e._v("，应用便可以利用新资源。")]),e._v(" "),r("h2",{attrs:{id:"_7-清理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-清理"}},[e._v("#")]),e._v(" 7. 清理")]),e._v(" "),r("p",[e._v("您可以使用 "),r("code",[e._v("docker stack rm")]),e._v(" 清除技术栈。例如：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('docker-machine ssh myvm1 "docker stack rm getstartedlab"\n\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("blockquote",[r("h4",{attrs:{id:"保留-swarm-还是将其删除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#保留-swarm-还是将其删除"}},[e._v("#")]),e._v(" 保留 swarm 还是将其删除？")]),e._v(" "),r("p",[e._v("在稍后的某个时间，您可以在需要时使用 工作节点上的 "),r("code",[e._v('docker-machine ssh myvm2 "docker swarm leave"')]),e._v(" 和管理节点上的 "),r("code",[e._v('docker-machine ssh myvm1 "docker swarm leave --force"')]),e._v(" 删除此 swarm，但_由于您将需要在第 5 部分中使用此 swarm，因此请 暂时将其保留_。")])]),e._v(" "),r("h3",{attrs:{id:"_7-1-取消设置docker-machine-shell变量设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-取消设置docker-machine-shell变量设置"}},[e._v("#")]),e._v(" 7.1. 取消设置docker-machine shell变量设置")]),e._v(" "),r("p",[e._v("您可以"),r("code",[e._v("docker-machine")]),e._v("使用给定命令在当前shell中取消设置环境变量。")]),e._v(" "),r("p",[e._v("在"),r("strong",[e._v("Mac或Linux上")]),e._v("，命令是：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("  eval $(docker-machine env -u)\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("p",[e._v("在"),r("strong",[e._v("Windows上")]),e._v("，命令是：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('  & "C:\\Program Files\\Docker\\Docker\\Resources\\bin\\docker-machine.exe" env -u | Invoke-Expression\n\n')])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("p",[e._v("这会使shell与"),r("code",[e._v("docker-machine")]),e._v("创建的虚拟机断开连接，并允许您继续在同一个shell中工作，现在使用本机"),r("code",[e._v("docker")]),e._v(" 命令（例如，在Docker Desktop for Mac或Docker Desktop for Windows上）。要了解更多信息，请参阅"),r("a",{attrs:{href:"https://docs.docker.com/machine/get-started/#unset-environment-variables-in-the-current-shell",target:"_blank",rel:"noopener noreferrer"}},[e._v("有关取消设置环境变量"),r("OutboundLink")],1),e._v("的"),r("a",{attrs:{href:"https://docs.docker.com/machine/get-started/#unset-environment-variables-in-the-current-shell",target:"_blank",rel:"noopener noreferrer"}},[e._v("计算机主题"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h3",{attrs:{id:"_7-2-重启docker机器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-重启docker机器"}},[e._v("#")]),e._v(" 7.2. 重启Docker机器")]),e._v(" "),r("p",[e._v("如果关闭本地主机，Docker计算机将停止运行。您可以通过运行来检查机器的状态"),r("code",[e._v("docker-machine ls")]),e._v("。")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ docker-machine ls\nNAME    ACTIVE   DRIVER       STATE     URL   SWARM   DOCKER    ERRORS\nmyvm1   -        virtualbox   Stopped                 Unknown\nmyvm2   -        virtualbox   Stopped                 Unknown\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br")])]),r("p",[e._v("要重新启动已停止的计算机，请运行：")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker-machine start <machine-name>\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("p",[e._v("例如：")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("$ docker-machine start myvm1\nStarting "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myvm1"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("myvm1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" Check network to re-create "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" needed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("myvm1"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" Waiting "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" an IP"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nMachine "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myvm1"')]),e._v(" was started.\nWaiting "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" SSH to be available"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nDetecting the provisioner"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nStarted machines may have new IP addresses. You may need to re-run the "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" command.\n\n$ docker-machine start myvm2\nStarting "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myvm2"')]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("myvm2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" Check network to re-create "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" needed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("myvm2"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" Waiting "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" an IP"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nMachine "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myvm2"')]),e._v(" was started.\nWaiting "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" SSH to be available"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nDetecting the provisioner"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nStarted machines may have new IP addresses. You may need to re-run the "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v(" command.\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br"),r("span",{staticClass:"line-number"},[e._v("11")]),r("br"),r("span",{staticClass:"line-number"},[e._v("12")]),r("br"),r("span",{staticClass:"line-number"},[e._v("13")]),r("br"),r("span",{staticClass:"line-number"},[e._v("14")]),r("br"),r("span",{staticClass:"line-number"},[e._v("15")]),r("br"),r("span",{staticClass:"line-number"},[e._v("16")]),r("br"),r("span",{staticClass:"line-number"},[e._v("17")]),r("br")])]),r("p",[e._v("在第 4 部分中，您已了解 swarm 是什么、swarm 中的节点如何成为管理节点或工作节点、如何创建 swarm 以及如何在其上应用。可以看到，核心 Docker 命令与第 3 部分相同，但它们必须以在 swarm master 上运行为目标。还可以了解到 Docker 网络在运行中的功能，即使容器在不同的机器上运行，此功能也可以在容器之间保持负载均衡请求。最后，您已了解如何在集群上迭代和扩展应用。")]),e._v(" "),r("p",[e._v("以下是与 swarm 进行交互时您可能会运行的命令：")]),e._v(" "),r("div",{staticClass:"language-shell line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-shell"}},[r("code",[e._v("docker-machine create --driver virtualbox myvm1 "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 创建 VM（Mac、Win7、Linux）")]),e._v("\ndocker-machine create -d hyperv --hyperv-virtual-switch "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myswitch"')]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Win10")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" myvm1                "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看有关节点的基本信息")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker node ls"')]),e._v("         "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 列出 swarm 中的节点")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker node inspect <node ID>"')]),e._v("        "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 检查节点")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker swarm join-token -q worker"')]),e._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 查看加入令牌")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 打开与 VM 的 SSH 会话；输入“exit”以结束会话")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm2 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker swarm leave"')]),e._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使工作节点退出 swarm")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker swarm leave -f"')]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使主节点退出，终止 swarm")]),e._v("\ndocker-machine start myvm1            "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启动当前未运行的 VM")]),e._v("\ndocker-machine stop "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -q"),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("               "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 停止所有正在运行的 VM")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("rm")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" -q"),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 删除所有 VM 及其磁盘镜像")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("scp")]),e._v(" docker-compose.yml myvm1:~     "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 将文件复制到节点的主目录")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ssh")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"docker stack deploy -c <file> <app>"')]),e._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 部署应用")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("node")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v("                "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# View nodes in swarm (while logged on to manager)")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("ls")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# list VMs, asterisk shows which VM this shell is talking to")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" myvm1      "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# show environment variables and command for myvm1")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("eval")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" myvm1"),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("         "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Mac command to connect shell to myvm1")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("&")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"C:\\Program Files\\Docker\\Docker\\Resources'),r("span",{pre:!0,attrs:{class:"token entity",title:"\\b"}},[e._v("\\b")]),e._v('in\\docker-machine.exe"')]),e._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" myvm1 "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" Invoke-Expression   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Windows command to connect shell to myvm1")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" stack deploy -c "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("file"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("app"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Deploy an app; command shell must be set to talk to manager (myvm1), uses local Compose file")]),e._v("\ndocker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("scp")]),e._v(" docker-compose.yml myvm1:~ "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Copy file to node's home dir (only required if you use ssh to connect to manager and deploy the app)")]),e._v("\n"),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("eval")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token variable"}},[r("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("docker-machine "),r("span",{pre:!0,attrs:{class:"token function"}},[e._v("env")]),e._v(" -u"),r("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("     "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Disconnect shell from VMs, use native docker")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br"),r("span",{staticClass:"line-number"},[e._v("11")]),r("br"),r("span",{staticClass:"line-number"},[e._v("12")]),r("br"),r("span",{staticClass:"line-number"},[e._v("13")]),r("br"),r("span",{staticClass:"line-number"},[e._v("14")]),r("br"),r("span",{staticClass:"line-number"},[e._v("15")]),r("br"),r("span",{staticClass:"line-number"},[e._v("16")]),r("br"),r("span",{staticClass:"line-number"},[e._v("17")]),r("br"),r("span",{staticClass:"line-number"},[e._v("18")]),r("br"),r("span",{staticClass:"line-number"},[e._v("19")]),r("br"),r("span",{staticClass:"line-number"},[e._v("20")]),r("br"),r("span",{staticClass:"line-number"},[e._v("21")]),r("br"),r("span",{staticClass:"line-number"},[e._v("22")]),r("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);